paths:
  /api/community/posts:
    get:
      tags:
        - Community
      summary: Get all posts
      responses:
        "200":
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
        "500":
          description: Server error
    post:
      tags:
        - Community
      summary: Create a new post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  example: This is a new community post.
      responses:
        "201":
          description: Post created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "500":
          description: Server error

  /api/community/posts/{postId}:
    put:
      tags:
        - Community
      summary: Update a post
      security:
        - bearerAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
      responses:
        "200":
          description: Post updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "403":
          description: Forbidden
        "404":
          description: Post not found
        "500":
          description: Server error

    delete:
      tags:
        - Community
      summary: Delete a post
      security:
        - bearerAuth: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Post deleted
        "403":
          description: Forbidden
        "404":
          description: Post not found
        "500":
          description: Server error

  /api/community/posts/{postId}/comments:
    get:
      tags:
        - Community
      summary: Get all comments for a post
      parameters:
        - name: postId
          in: path
          description: ID of the post
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "404":
          description: Post not found
        "500":
          description: Server error

    post:
      tags:
        - Community
      summary: Add a comment to a post
      security:
        - bearerAuth: []
      parameters:
        - name: postId
          in: path
          description: ID of the post
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
      responses:
        "201":
          description: Comment added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "401":
          description: Unauthorized
        "404":
          description: Post not found
        "500":
          description: Server error

  /api/community/comments/{commentId}:
    put:
      tags:
        - Community
      summary: Update a comment
      security:
        - bearerAuth: []
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
      responses:
        "200":
          description: Comment updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "403":
          description: Forbidden
        "404":
          description: Comment not found
        "500":
          description: Server error

    delete:
      tags:
        - Community
      summary: Delete a comment
      security:
        - bearerAuth: []
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Comment deleted
        "403":
          description: Forbidden
        "404":
          description: Comment not found
        "500":
          description: Server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date-time
        profile:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            profileImage:
              type: string
              format: uri

    Comment:
      type: object
      properties:
        id:
          type: integer
        post_id:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time
        profile:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            profileImage:
              type: string
              format: uri
